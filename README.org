#+TITLE: Finite State Machines

Implementation(s) of finite state machine(s) to make my life easier. Very little testing as of now (if any).

* Deterministic Finite Automata

#+begin_quote
"Finite-state machine that accepts and rejects strings of symbols and only produces a unique computation (or run) of the automaton for each input string"
#+end_quote

https://en.wikipedia.org/wiki/Deterministic_finite_automaton

** Example Usage
#+begin_src python :results output :exports both
from src.dfa import DeterministicFiniteAutomata

# Machine for accepting strings of 1's or 0's where three consecutive zeroes occur at some point
DFA = DeterministicFiniteAutomata(
    {"q1", "q2", "q3", "q4"},
    {"0", "1"},
    {
        ("q1", "0", "q2"),
        ("q1", "1", "q1"),
        ("q2", "0", "q3"),
        ("q2", "1", "q1"),
        ("q3", "0", "q4"),
        ("q3", "1", "q1"),
        ("q4", "0", "q4"),
        ("q4", "1", "q4"),
    },
    "q1",
    {"q4"},
)
print("111010011:", DFA.process_input("111010011")) # Does not contain 3 consecutive zeroes (=> False)
print("111010001:", DFA.process_input("111010001")) # Contains 3 consecutive zeroes (=> True)
#+end_src

#+RESULTS:
: 111010011: False
: 111010001: True
